# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker: # specify the version you desire here
      - image: circleci/node:10.0.0

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: update-npm
          command: sudo npm i -g npm@latest

      - restore_cache: # Download and cache dependencies
          key: dependency-cache-{{ checksum "yarn.lock" }}

      - run:
          name: install
          command: yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

      - run: # run ES linter
          name: lint
          command: yarn lint

      - run: # run SASS linter
          name: sass lint
          command: yarn sass-lint

  deploy:
    docker: # specify the version you desire here
      - image: circleci/node:10.0.0

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: update-npm
          command: sudo npm i -g npm@latest

      - restore_cache: # Download and cache dependencies
          key: dependency-cache-{{ checksum "yarn.lock" }}

      - run:
          name: install
          command: yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

      - run:
          name: deploy
          command: yarn deploy-stage

  test:
    docker: # specify the version you desire here
      - image: circleci/node:10.0.0

    steps:
      - checkout

      - run:
          name: update-npm
          command: sudo npm i -g npm@latest

      - restore_cache: # Download and cache dependencies
          key: dependency-cache-{{ checksum "yarn.lock" }}

      - run:
          name: install
          command: yarn install

      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - ./node_modules

      - run:
          name: test
          command: yarn test

#      - run:
#          name: Generate code coverage
#          command: './node_modules/.bin/nyc report --reporter=text-lcov'
#      - store_artifacts:
#          path: test-results.xml
#          prefix: tests
#      - store_artifacts:
#          path: coverage
#          prefix: coverage

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - test
      - deploy:
          requires:
            - build
            - test
          filters:
            branches:
              only: master
